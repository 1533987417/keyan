'use strict';

var _wepy = require('./../../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function formatTime(date) {
  var year = date.getFullYear();
  var month = date.getMonth() + 1;
  var day = date.getDate();

  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();

  return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':');
}
function formatNumber(n) {
  n = n.toString();
  return n[1] ? n : '0' + n;
}

function timechange(time) {
  /*var dateee = new Date(time).toJSON();  
  var date = new Date(+new Date(dateee)+8*3600*1000).toISOString().replace(/T/g,' ').replace(/\.[\d]{3}Z/,'')
  return date*/
  return time.slice(0, 10) + " " + time.slice(11, 16);
}
function getObjectKeys(object) {
  var keys = [];
  for (var property in object) {
    keys.push(property);
  }return keys;
}
function addnum(object) {

  var i = 1;
  for (var a = 0; a < object.length; a++) {
    object[a].push(i++);
  }
  return object;
}
function trim(s) {
  return s.replace(/(^\s*)|(\s*$)/g, "");
}

module.exports = {
  formatTime: formatTime,
  timechange: timechange,
  trim: trim,
  getObjectKeys: getObjectKeys,
  addnum: addnum

};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwuanMiXSwibmFtZXMiOlsiZm9ybWF0VGltZSIsImRhdGUiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJtb250aCIsImdldE1vbnRoIiwiZGF5IiwiZ2V0RGF0ZSIsImhvdXIiLCJnZXRIb3VycyIsIm1pbnV0ZSIsImdldE1pbnV0ZXMiLCJzZWNvbmQiLCJnZXRTZWNvbmRzIiwibWFwIiwiZm9ybWF0TnVtYmVyIiwiam9pbiIsIm4iLCJ0b1N0cmluZyIsInRpbWVjaGFuZ2UiLCJ0aW1lIiwic2xpY2UiLCJnZXRPYmplY3RLZXlzIiwib2JqZWN0Iiwia2V5cyIsInByb3BlcnR5IiwicHVzaCIsImFkZG51bSIsImkiLCJhIiwibGVuZ3RoIiwidHJpbSIsInMiLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQ0EsU0FBU0EsVUFBVCxDQUFvQkMsSUFBcEIsRUFBMEI7QUFDeEIsTUFBSUMsT0FBT0QsS0FBS0UsV0FBTCxFQUFYO0FBQ0EsTUFBSUMsUUFBUUgsS0FBS0ksUUFBTCxLQUFrQixDQUE5QjtBQUNBLE1BQUlDLE1BQU1MLEtBQUtNLE9BQUwsRUFBVjs7QUFFQSxNQUFJQyxPQUFPUCxLQUFLUSxRQUFMLEVBQVg7QUFDQSxNQUFJQyxTQUFTVCxLQUFLVSxVQUFMLEVBQWI7QUFDQSxNQUFJQyxTQUFTWCxLQUFLWSxVQUFMLEVBQWI7O0FBRUEsU0FBTyxDQUFDWCxJQUFELEVBQU9FLEtBQVAsRUFBY0UsR0FBZCxFQUFtQlEsR0FBbkIsQ0FBdUJDLFlBQXZCLEVBQXFDQyxJQUFyQyxDQUEwQyxHQUExQyxJQUFpRCxHQUFqRCxHQUF1RCxDQUFDUixJQUFELEVBQU9FLE1BQVAsRUFBZUUsTUFBZixFQUF1QkUsR0FBdkIsQ0FBMkJDLFlBQTNCLEVBQXlDQyxJQUF6QyxDQUE4QyxHQUE5QyxDQUE5RDtBQUNEO0FBQ0QsU0FBU0QsWUFBVCxDQUFzQkUsQ0FBdEIsRUFBeUI7QUFDdkJBLE1BQUlBLEVBQUVDLFFBQUYsRUFBSjtBQUNBLFNBQU9ELEVBQUUsQ0FBRixJQUFPQSxDQUFQLEdBQVcsTUFBTUEsQ0FBeEI7QUFDRDs7QUFHRCxTQUFTRSxVQUFULENBQW9CQyxJQUFwQixFQUF5QjtBQUN2Qjs7O0FBR0EsU0FBT0EsS0FBS0MsS0FBTCxDQUFXLENBQVgsRUFBYSxFQUFiLElBQWlCLEdBQWpCLEdBQXFCRCxLQUFLQyxLQUFMLENBQVcsRUFBWCxFQUFjLEVBQWQsQ0FBNUI7QUFFRDtBQUNELFNBQVNDLGFBQVQsQ0FBdUJDLE1BQXZCLEVBQ0k7QUFDSSxNQUFJQyxPQUFPLEVBQVg7QUFDQSxPQUFLLElBQUlDLFFBQVQsSUFBcUJGLE1BQXJCO0FBQ0lDLFNBQUtFLElBQUwsQ0FBVUQsUUFBVjtBQURKLEdBRUEsT0FBT0QsSUFBUDtBQUNIO0FBQ0QsU0FBU0csTUFBVCxDQUFnQkosTUFBaEIsRUFBdUI7O0FBRXJCLE1BQUlLLElBQUUsQ0FBTjtBQUNBLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWVBLElBQUlOLE9BQU9PLE1BQTFCLEVBQWtDRCxHQUFsQyxFQUF1QztBQUNyQ04sV0FBT00sQ0FBUCxFQUFVSCxJQUFWLENBQWVFLEdBQWY7QUFDRDtBQUNELFNBQU9MLE1BQVA7QUFDRDtBQUNMLFNBQVNRLElBQVQsQ0FBY0MsQ0FBZCxFQUFnQjtBQUNkLFNBQU9BLEVBQUVDLE9BQUYsQ0FBVSxnQkFBVixFQUE0QixFQUE1QixDQUFQO0FBQ0Q7O0FBR0RDLE9BQU9DLE9BQVAsR0FBZTtBQUNkbkMsY0FBV0EsVUFERztBQUVibUIsY0FBV0EsVUFGRTtBQUdaWSxRQUFLQSxJQUhPO0FBSWJULGlCQUFjQSxhQUpEO0FBS2JLLFVBQU9BOztBQUxNLENBQWYiLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB3ZXB5IGZyb20gJ3dlcHknO1xyXG5mdW5jdGlvbiBmb3JtYXRUaW1lKGRhdGUpIHtcclxuICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKVxyXG4gIHZhciBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDFcclxuICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKClcclxuXHJcbiAgdmFyIGhvdXIgPSBkYXRlLmdldEhvdXJzKClcclxuICB2YXIgbWludXRlID0gZGF0ZS5nZXRNaW51dGVzKClcclxuICB2YXIgc2Vjb25kID0gZGF0ZS5nZXRTZWNvbmRzKClcclxuXHJcbiAgcmV0dXJuIFt5ZWFyLCBtb250aCwgZGF5XS5tYXAoZm9ybWF0TnVtYmVyKS5qb2luKCcvJykgKyAnICcgKyBbaG91ciwgbWludXRlLCBzZWNvbmRdLm1hcChmb3JtYXROdW1iZXIpLmpvaW4oJzonKVxyXG59XHJcbmZ1bmN0aW9uIGZvcm1hdE51bWJlcihuKSB7ICBcclxuICBuID0gbi50b1N0cmluZygpICBcclxuICByZXR1cm4gblsxXSA/IG4gOiAnMCcgKyBuICBcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIHRpbWVjaGFuZ2UodGltZSl7XHJcbiAgLyp2YXIgZGF0ZWVlID0gbmV3IERhdGUodGltZSkudG9KU09OKCk7ICBcclxuICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCtuZXcgRGF0ZShkYXRlZWUpKzgqMzYwMCoxMDAwKS50b0lTT1N0cmluZygpLnJlcGxhY2UoL1QvZywnICcpLnJlcGxhY2UoL1xcLltcXGRdezN9Wi8sJycpXHJcbiAgcmV0dXJuIGRhdGUqL1xyXG4gIHJldHVybiB0aW1lLnNsaWNlKDAsMTApK1wiIFwiK3RpbWUuc2xpY2UoMTEsMTYpO1xyXG5cclxufVxyXG5mdW5jdGlvbiBnZXRPYmplY3RLZXlzKG9iamVjdClcclxuICAgIHtcclxuICAgICAgICB2YXIga2V5cyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIHByb3BlcnR5IGluIG9iamVjdClcclxuICAgICAgICAgICAga2V5cy5wdXNoKHByb3BlcnR5KTtcclxuICAgICAgICByZXR1cm4ga2V5cztcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGFkZG51bShvYmplY3Qpe1xyXG5cclxuICAgICAgdmFyIGk9MVxyXG4gICAgICBmb3IgKHZhciBhID0gMDthIDwgb2JqZWN0Lmxlbmd0aDsgYSsrKSB7XHJcbiAgICAgICAgb2JqZWN0W2FdLnB1c2goaSsrKVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBvYmplY3RcclxuICAgIH1cclxuZnVuY3Rpb24gdHJpbShzKXtcclxuICByZXR1cm4gcy5yZXBsYWNlKC8oXlxccyopfChcXHMqJCkvZywgXCJcIik7XHJcbn1cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cz17XHJcblx0Zm9ybWF0VGltZTpmb3JtYXRUaW1lLFxyXG4gIHRpbWVjaGFuZ2U6dGltZWNoYW5nZSxcclxuICAgdHJpbTp0cmltLFxyXG4gIGdldE9iamVjdEtleXM6Z2V0T2JqZWN0S2V5cyxcclxuICBhZGRudW06YWRkbnVtXHJcblxyXG59XHJcbiJdfQ==